{"ast":null,"code":"var _jsxFileName = \"/Users/sonjh/Desktop/\\u1102\\u1161\\u110F\\u1165\\u11B7\\u1111\\u1165\\u1102\\u1175/parent_report/temp-report/src/view/report/selector.jsx\",\n  _s = $RefreshSig$();\nimport ScrollMenu from 'react-horizontal-scrolling-menu'; // ScrollMenu 가져오기\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet list = [{\n  name: '2323'\n}, {\n  name: '23'\n}, {\n  name: '1111'\n}, {\n  name: '4444'\n}]; // 임시데이터 선언\n\n// Item 단위의 컴포넌트\nconst MenuItem = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-item\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\n// MenuItem들을 list만큼 생성한 List단위의 컴포넌트\n_c = MenuItem;\nexport const Menu = list => list.map(el => {\n  const {\n    name\n  } = el;\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    text: name\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Menu;\nfunction Selector() {\n  _s();\n  const [DataItem, setDataItem] = useState(null);\n  //   useEffect(() => {\n  //     setDataItem(Menu(list)); // Menu컴포넌트를 state에 저장\n  //   }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: DataItem && /*#__PURE__*/_jsxDEV(ScrollMenu, {\n        children: Data.map(_ref2 => {\n          let {\n            nickname,\n            avatar,\n            itemId\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"33\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Selector, \"yNtzeq8ajmawOALgOC2D3k3yY9Q=\");\n_c3 = Selector;\nexport default Selector;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MenuItem\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"Selector\");","map":{"version":3,"names":["ScrollMenu","React","useState","useEffect","list","name","MenuItem","text","Menu","map","el","Selector","DataItem","setDataItem","Data","nickname","avatar","itemId"],"sources":["/Users/sonjh/Desktop/나컴퍼니/parent_report/temp-report/src/view/report/selector.jsx"],"sourcesContent":["import ScrollMenu from 'react-horizontal-scrolling-menu' // ScrollMenu 가져오기\nimport React, { useState, useEffect } from 'react';\nlet list = [\n    {name : '2323'},\n    {name : '23'},\n    {name : '1111'},\n    {name : '4444'}\n] // 임시데이터 선언\n\n// Item 단위의 컴포넌트\nconst MenuItem = ({ text }) => {\n  return <div className=\"menu-item\">{text}</div>;\n};\n\n// MenuItem들을 list만큼 생성한 List단위의 컴포넌트\nexport const Menu = list => (\n  list.map(el => {\n    const { name } = el;\n    return <MenuItem text={name} key={name} />\n  })\n);\n\nfunction Selector() {\n\n  const [DataItem, setDataItem] = useState(null);\n//   useEffect(() => {\n//     setDataItem(Menu(list)); // Menu컴포넌트를 state에 저장\n//   }, [])\n \n\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n      {\n        DataItem &&\n        <ScrollMenu>\n\n            {Data.map(\n                ({ nickname, avatar, itemId }) => {\n                    return (\n                        <h1>33</h1>\n                    );\n                },\n            )}\n        </ScrollMenu>\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default Selector;"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,iCAAiC,EAAC;AACzD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AACnD,IAAIC,IAAI,GAAG,CACP;EAACC,IAAI,EAAG;AAAM,CAAC,EACf;EAACA,IAAI,EAAG;AAAI,CAAC,EACb;EAACA,IAAI,EAAG;AAAM,CAAC,EACf;EAACA,IAAI,EAAG;AAAM,CAAC,CAClB,EAAC;;AAEF;AACA,MAAMC,QAAQ,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACxB,oBAAO;IAAK,SAAS,EAAC,WAAW;IAAA,UAAEA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAO;AAChD,CAAC;;AAED;AAAA,KAJMD,QAAQ;AAKd,OAAO,MAAME,IAAI,GAAGJ,IAAI,IACtBA,IAAI,CAACK,GAAG,CAACC,EAAE,IAAI;EACb,MAAM;IAAEL;EAAK,CAAC,GAAGK,EAAE;EACnB,oBAAO,QAAC,QAAQ;IAAC,IAAI,EAAEL;EAAK,GAAMA,IAAI;IAAA;IAAA;IAAA;EAAA,QAAI;AAC5C,CAAC,CACF;AAAC,MALWG,IAAI;AAOjB,SAASG,QAAQ,GAAG;EAAA;EAElB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD;EACA;EACA;;EAGE,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,MAAM;MAAA,UAEnBU,QAAQ,iBACR,QAAC,UAAU;QAAA,UAENE,IAAI,CAACL,GAAG,CACL,SAAkC;UAAA,IAAjC;YAAEM,QAAQ;YAAEC,MAAM;YAAEC;UAAO,CAAC;UACzB,oBACI;YAAA,UAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QAAK;QAEnB,CAAC;MACJ;QAAA;QAAA;QAAA;MAAA;IACQ;MAAA;MAAA;MAAA;IAAA;EAET;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA3BQN,QAAQ;AAAA,MAARA,QAAQ;AA6BjB,eAAeA,QAAQ;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}